"use strict";(self.webpackChunknewdocs=self.webpackChunknewdocs||[]).push([[1360],{71163:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>i,default:()=>p,frontMatter:()=>s,metadata:()=>d,toc:()=>c});var r=t(85893),o=t(11151);const s={sidebar_position:15},i="Working with external data sources",d={id:"docs/walkthrough/referring_to_data_from_diverse_sources",title:"Working with external data sources",description:"This functionality is currently supported for MongoDB only",source:"@site/content/docs/walkthrough/referring_to_data_from_diverse_sources.md",sourceDirName:"docs/walkthrough",slug:"/docs/walkthrough/referring_to_data_from_diverse_sources",permalink:"/docs/docs/walkthrough/referring_to_data_from_diverse_sources",draft:!1,unlisted:!1,editUrl:"https://github.com/SuperDuperDB/superduperdb/blob/main/docs/hr/content/docs/walkthrough/referring_to_data_from_diverse_sources.md",tags:[],version:"current",sidebarPosition:15,frontMatter:{sidebar_position:15},sidebar:"tutorialSidebar",previous:{title:"Inserting data",permalink:"/docs/docs/walkthrough/inserting_data"},next:{title:"Working with and inserting large pieces of data",permalink:"/docs/docs/walkthrough/using_hybrid_storage_to_handle_large_data_blobs"}},a={},c=[];function l(e){const n={admonition:"admonition",code:"code",h1:"h1",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"working-with-external-data-sources",children:"Working with external data sources"}),"\n",(0,r.jsx)(n.admonition,{type:"warning",children:(0,r.jsx)(n.p,{children:"This functionality is currently supported for MongoDB only"})}),"\n",(0,r.jsxs)(n.p,{children:["Using the MongoDB query API, ",(0,r.jsx)(n.code,{children:"superduperdb"})," supports data added from external data-sources.\nWhen doing this, ",(0,r.jsx)(n.code,{children:"superduperdb"})," supports:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"web URLs"}),"\n",(0,r.jsxs)(n.li,{children:["URIs of objects in ",(0,r.jsx)(n.code,{children:"s3"})," buckets"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["The trick is to pass the ",(0,r.jsx)(n.code,{children:"uri"})," parameter to an encoder, instead of the raw-data.\nHere is an example where we add a ",(0,r.jsx)(n.code,{children:".pdf"})," file directly from a location\non the public internet."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"import io\nfrom PyPDF2 import PdfReader\nfrom superduperdb.backends.mongodb import Collection\n\ncollection = Collection('pdf-files')\n\ndef load_pdf(bytes):\n    text = []\n    for page in PdfReader(io.BytesIO(bytes)).pages:\n        text.append(page.extract_text())\n    return '\\n----NEW-PAGE----\\n'.join(text)\n\n# no `encoder=...` parameter required since text is not converted to `.pdf` format\npdf_enc = Encoder('my-pdf-encoder', decoder=load_pdf)\n\nPDF_URI = (\n    'https://papers.nips.cc/paper_files/paper/2012/file/'\n    'c399862d3b9d6b76c8436e924a68c45b-Paper.pdf'\n)\n\n# This command inserts a record which refers to this URI\n# and also downloads the content from the URI and saves\n# it in the record\ndb.execute(\n    collection.insert_one(Document({'txt': pdf_enc(uri=PDF_URI)}))\n)\n"})}),"\n",(0,r.jsx)(n.p,{children:"Now when the data is loaded from the database, it is loaded as text:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:">>> r = db.execute(collection.find_one())\n>>> print(r['txt'])\n"})})]})}function p(e={}){const{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},11151:(e,n,t)=>{t.d(n,{Z:()=>d,a:()=>i});var r=t(67294);const o={},s=r.createContext(o);function i(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);