"use strict";(self.webpackChunknewdocs=self.webpackChunknewdocs||[]).push([[3909],{76800:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>h,frontMatter:()=>s,metadata:()=>d,toc:()=>a});var r=o(85893),t=o(11151);const s={},i="Walkthrough: How to enable and manage MongoDB Atlas Vector Search with SuperDuperDB",d={permalink:"/blog/2023/09/31/a-walkthrough-of-vector-search-on-mongodb-atlas-with-superduperdb/content",editUrl:"https://github.com/SuperDuperDB/superduperdb/blob/main/docs/hr/blog/2023-09-31-a-walkthrough-of-vector-search-on-mongodb-atlas-with-superduperdb/content.md",source:"@site/blog/2023-09-31-a-walkthrough-of-vector-search-on-mongodb-atlas-with-superduperdb/content.md",title:"Walkthrough: How to enable and manage MongoDB Atlas Vector Search with SuperDuperDB",description:"*In step-by-step tutorial we will show how to leverage MongoDB Atlas Vector Search",date:"2023-10-01T00:00:00.000Z",formattedDate:"October 1, 2023",tags:[],readingTime:3.755,hasTruncateMarker:!0,authors:[],frontMatter:{},unlisted:!1,prevItem:{title:"How to efficiently build AI chat applications for your own documents with MongoDB Atlas",permalink:"/blog/2023/10/04/walkthrough-rag-app-atlas"},nextItem:{title:"Jumpstart AI development on MongoDB with SuperDuperDB",permalink:"/blog/2023/09/30/jump-start-ai-development"}},l={authorsImageUrls:[]},a=[{value:"Useful Links",id:"useful-links",level:3},{value:"Contributors are welcome!",id:"contributors-are-welcome",level:3},{value:"Become a Design Partner!",id:"become-a-design-partner",level:3}];function c(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h3:"h3",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:(0,r.jsx)(n.em,{children:"In step-by-step tutorial we will show how to leverage MongoDB Atlas Vector Search\nwith SuperDuperDB, including the generation of vector embeddings. Learn how to connect embedding APIs such as OpenAI or use embedding models for example from HuggingFace with MongoDB Atlas with simple Python commands."})}),"\n",(0,r.jsx)(n.admonition,{type:"info",children:(0,r.jsx)(n.p,{children:"SuperDuperDB makes it very easy to set up multimodal vector search with different file types (text, image, audio, video, and more)."})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsxs)(n.strong,{children:["Install ",(0,r.jsx)(n.code,{children:"superduperdb"})," Python package"]})}),"\n",(0,r.jsx)(n.p,{children:"Using vector-search with SuperDuperDB on MongoDB requires only one simple python package install:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"pip install superduperdb\n"})}),"\n",(0,r.jsxs)(n.p,{children:["With this install SuperDuperDB includes all the packages needed to define a range of API based and package based\nvector-search models, such as OpenAI and Hugging-Face's ",(0,r.jsx)(n.code,{children:"transformers"}),"."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Connect to your Atlas cluster using SuperDuperDB"})}),"\n",(0,r.jsxs)(n.p,{children:["SuperDuperDB ships with it's own MongoDB python client, which supports\nall commands supported by ",(0,r.jsx)(n.code,{children:"pymongo"}),". In the example below\nthe key to connecting to your Atlas cluster is the ",(0,r.jsx)(n.code,{children:"db"})," object."]}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"db"})," object contains all functionality needed to read and write to\nthe MongoDB instance and also to define, save and apply a flexible range\nof AI models for vector-search."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'from superduperdb.db.base.build import build_datalayer\nfrom superduperdb import CFG\nimport os\n\nATLAS_URI = "mongodb+srv://<user>@<atlas-server>/<database_name>"\nOPENAI_API_KEY = "<your-open-ai-api-key>"\n\nos.environ["OPENAI_API_KEY"] = OPENAI_API_KEY\n\nCFG.data_backend = ATLAS_URI\nCFG.vector_search = ATLAS_URI\n\ndb = build_datalayer()\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Load your data"})}),"\n",(0,r.jsxs)(n.p,{children:["You can download some data to play with from ",(0,r.jsx)(n.a,{href:"https://superduperdb-public.s3.eu-west-1.amazonaws.com/pymongo.json",children:"this link"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"curl -O https://superduperdb-public.s3.eu-west-1.amazonaws.com/pymongo.json\n"})}),"\n",(0,r.jsxs)(n.p,{children:["The data contains all inline doc-strings of the ",(0,r.jsx)(n.code,{children:"pymongo"})," Python API (official\nMongoDB driver for Python). The name of the function or class is in ",(0,r.jsx)(n.code,{children:'"res"'})," and\nthe doc-string is contained in ",(0,r.jsx)(n.code,{children:'"value"'}),"."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"import json\n\nwith open('pymongo.json') as f:\n    data = json.load(f)\n"})}),"\n",(0,r.jsx)(n.p,{children:"Here's one record to illustrate the data:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "key": "pymongo.mongo_client.MongoClient",\n  "parent": null,\n  "value": "\\nClient for a MongoDB instance, a replica set, or a set of mongoses.\\n\\n",\n  "document": "mongo_client.md",\n  "res": "pymongo.mongo_client.MongoClient"\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Insert the data into your Atlas cluster"})}),"\n",(0,r.jsx)(n.p,{children:"We can use the SuperDuperDB connection to insert this data"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"from superduperdb.db.mongodb.query import Collection\n\ncollection = Collection('documents')\n\ndb.execute(\n    collection.insert_many([\n        Document(r) for r in data\n    ])\n)\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Define your vector model and vector-index"})}),"\n",(0,r.jsx)(n.p,{children:"Now we have data in our collection we can define the vector-index:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"from superduperdb.container.vector_index import VectorIndex\nfrom superduperdb.container.listener import Listener\nfrom superduperdb.ext.numpy.array import array\nfrom superduperdb.ext.openai.model import OpenAIEmbedding\n\nmodel = OpenAIEmbedding(model='text-embedding-ada-002')\n\ndb.add(\n    VectorIndex(\n        identifier=f'pymongo-docs',\n        indexing_listener=Listener(\n            model=model,\n            key='value',\n            select=Collection('documents').find(),\n            predict_kwargs={'max_chunk_size': 1000},\n        ),\n    )\n)\n"})}),"\n",(0,r.jsx)(n.p,{children:"This command tells the system that we want to:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["search the ",(0,r.jsx)(n.code,{children:'"documents"'})," collection"]}),"\n",(0,r.jsxs)(n.li,{children:["set-up a vector-index on our Atlas cluster, using the text in the ",(0,r.jsx)(n.code,{children:'"value"'})," field"]}),"\n",(0,r.jsxs)(n.li,{children:["use the OpenAI model ",(0,r.jsx)(n.code,{children:'"text-embedding-ada-002"'})," to create vector-embeddings"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"After issuing this command, SuperDuperDB does these things:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Configures an MongoDB Atlas knn-index in the ",(0,r.jsx)(n.code,{children:'"documents"'})," collection"]}),"\n",(0,r.jsxs)(n.li,{children:["Saves the ",(0,r.jsx)(n.code,{children:"model"})," object in the SuperDuperDB model store hosted on ",(0,r.jsx)(n.code,{children:"gridfs"})]}),"\n",(0,r.jsxs)(n.li,{children:["Applies ",(0,r.jsx)(n.code,{children:"model"})," to all data in the ",(0,r.jsx)(n.code,{children:'"documents"'})," collection, and saves the vectors in the documents"]}),"\n",(0,r.jsxs)(n.li,{children:["Saves the fact that ",(0,r.jsx)(n.code,{children:"model"})," is connected to the ",(0,r.jsx)(n.code,{children:'"pymongo-docs"'})," vector-index"]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["You can confirm that the index has been created and view the index's settings\nin the ",(0,r.jsx)(n.a,{href:"https://cloud.mongodb.com/",children:"Atlas UI"}),". It should look like this:"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{src:o(88566).Z+"",width:"2282",height:"1672"})}),"\n",(0,r.jsxs)(n.p,{children:["The nesting of the index signifies the fact that the index created looks\ninto the ",(0,r.jsx)(n.code,{children:"_outputs.<key>.<model-name>"})," path, which is where the model's vector outputs are stored\nautomatically by SuperDuperDB."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Use vector-search in a super-duper query"})}),"\n",(0,r.jsx)(n.p,{children:"Now we are ready to use the SuperDuperDB query-API for vector-search.\nYou'll see below, that SuperDuperDB handles all logic related to\nconverting queries on the fly to vectors under the hood."}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"from superduperdb.db.mongodb.query import Collection\nfrom superduperdb.container.document import Document as D\nfrom IPython.display import *\n\nquery = 'Find data'\n\nresult = db.execute(\n    Collection('documents')\n        .like(D({'value': query}), vector_index='pymongo-docs', n=5)\n        .find()\n)\n\nfor r in result:\n    display(Markdown(f'### `{r[\"parent\"] + \".\" if r[\"parent\"] else \"\"}{r[\"res\"]}`'))\n    display(Markdown(r['value']))\n"})}),"\n",(0,r.jsx)(n.h3,{id:"useful-links",children:"Useful Links"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"https://superduperdb.com/",children:"Website"})})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"https://github.com/SuperDuperDB/superduperdb",children:"GitHub"})})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"https://docs.superduperdb.com/docs/category/get-started",children:"Documentation"})})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"https://docs.superduperdb.com/blog",children:"Blog"})})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"https://docs.superduperdb.com/docs/category/use-cases",children:"Example Use Cases & Apps"})})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"https://join.slack.com/t/superduperdb/shared_invite/zt-1zuojj0k0-RjAYBs1TDsvEa7yaFGa6QA",children:"Slack Community"})})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"https://www.linkedin.com/company/superduperdb/",children:"LinkedIn"})})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"https://twitter.com/superduperdb",children:"Twitter"})})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:(0,r.jsx)(n.a,{href:"https://www.youtube.com/@superduperdb",children:"Youtube"})})}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"contributors-are-welcome",children:"Contributors are welcome!"}),"\n",(0,r.jsxs)(n.p,{children:["SuperDuperDB is open-source and permissively licensed under the ",(0,r.jsx)(n.a,{href:"https://github.com/SuperDuperDB/superduperdb/blob/main/LICENSE",children:"Apache 2.0 license"}),". We would like to encourage developers interested in open-source development to contribute in our discussion forums, issue boards and by making their own pull requests. We'll see you on ",(0,r.jsx)(n.a,{href:"https://github.com/SuperDuperDB/superduperdb",children:"GitHub"}),"!"]}),"\n",(0,r.jsx)(n.h3,{id:"become-a-design-partner",children:"Become a Design Partner!"}),"\n",(0,r.jsxs)(n.p,{children:["We are looking for visionary organizations which we can help to identify and implement transformative AI applications for their business and products. We're offering this absolutely for free. If you would like to learn more about this opportunity please reach out to us via email: ",(0,r.jsx)(n.a,{href:"mailto:partnerships@superduperdb.com",children:"partnerships@superduperdb.com"})]})]})}function h(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},88566:(e,n,o)=>{o.d(n,{Z:()=>r});const r=o.p+"assets/images/atlas_screen-22778bde02e875c6f464c9bb3d565280.png"},11151:(e,n,o)=>{o.d(n,{Z:()=>d,a:()=>i});var r=o(67294);const t={},s=r.createContext(t);function i(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);