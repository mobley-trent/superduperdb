"use strict";(self.webpackChunknewdocs=self.webpackChunknewdocs||[]).push([[4636],{63320:(n,e,o)=>{o.r(e),o.d(e,{assets:()=>d,contentTitle:()=>i,default:()=>u,frontMatter:()=>s,metadata:()=>r,toc:()=>a});var t=o(85893),c=o(11151);const s={sidebar_position:3},i="Running non-blocking dask computations in the background",r={id:"docs/production/non_blocking_dask_jobs",title:"Running non-blocking dask computations in the background",description:"superduperdb offers the possiblity to run all long running blocking jobs in the background via dask.",source:"@site/content/docs/production/non_blocking_dask_jobs.md",sourceDirName:"docs/production",slug:"/docs/production/non_blocking_dask_jobs",permalink:"/docs/docs/production/non_blocking_dask_jobs",draft:!1,unlisted:!1,editUrl:"https://github.com/SuperDuperDB/superduperdb/blob/main/docs/hr/content/docs/production/non_blocking_dask_jobs.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Command line interface",permalink:"/docs/docs/production/command_line_interface"},next:{title:"Setting up SuperDuperDB as a change-data-capture daemon",permalink:"/docs/docs/production/change_data_capture"}},d={},a=[];function l(n){const e={a:"a",code:"code",h1:"h1",li:"li",p:"p",pre:"pre",ul:"ul",...(0,c.a)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.h1,{id:"running-non-blocking-dask-computations-in-the-background",children:"Running non-blocking dask computations in the background"}),"\n",(0,t.jsxs)(e.p,{children:[(0,t.jsx)(e.code,{children:"superduperdb"})," offers the possiblity to run all long running blocking jobs in the background via ",(0,t.jsx)(e.code,{children:"dask"}),".\nRead about the ",(0,t.jsx)(e.code,{children:"dask"})," project ",(0,t.jsx)(e.a,{href:"https://www.dask.org/",children:"here"}),"."]}),"\n",(0,t.jsx)(e.p,{children:"To configure this feature, configure:"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-python",children:"from superduperdb import CFG\n\nCFG.mode = 'production'\n"})}),"\n",(0,t.jsxs)(e.p,{children:["When this is so-configured the following functions push their computations to the ",(0,t.jsx)(e.code,{children:"dask"})," cluster:"]}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:(0,t.jsx)(e.code,{children:"db.add"})}),"\n",(0,t.jsx)(e.li,{children:(0,t.jsx)(e.code,{children:"db.insert"})}),"\n",(0,t.jsx)(e.li,{children:(0,t.jsx)(e.code,{children:"db.update"})}),"\n",(0,t.jsx)(e.li,{children:(0,t.jsx)(e.code,{children:"Model.predict"})}),"\n",(0,t.jsx)(e.li,{children:(0,t.jsx)(e.code,{children:"Model.fit"})}),"\n"]}),"\n",(0,t.jsxs)(e.p,{children:["When ",(0,t.jsx)(e.code,{children:"dask"})," is configured, these functions returns either a ",(0,t.jsx)(e.code,{children:"superduperdb.job.Job"})," object, or an iterable thereof."]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-python",children:"job = m.predict(     # a `superduper.job.ComponentJob` object\n    X='x',\n    db=db,\n    select=Collection('localcluster').find(),\n)\n\njob.watch()          # watch the `stdout` of the `Job`\n"})})]})}function u(n={}){const{wrapper:e}={...(0,c.a)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(l,{...n})}):l(n)}},11151:(n,e,o)=>{o.d(e,{Z:()=>r,a:()=>i});var t=o(67294);const c={},s=t.createContext(c);function i(n){const e=t.useContext(s);return t.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function r(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(c):n.components||c:i(n.components),t.createElement(s.Provider,{value:e},n.children)}}}]);