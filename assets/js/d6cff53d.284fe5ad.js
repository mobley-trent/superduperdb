"use strict";(self.webpackChunknewdocs=self.webpackChunknewdocs||[]).push([[5485],{12520:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>c,toc:()=>a});var s=t(85893),i=t(11151);const r={sidebar_position:4},o="Testing",c={id:"docs/setup/testing",title:"Testing",description:"Make sure you have the following prerequistes",source:"@site/content/docs/setup/testing.md",sourceDirName:"docs/setup",slug:"/docs/setup/testing",permalink:"/docs/docs/setup/testing",draft:!1,unlisted:!1,editUrl:"https://github.com/SuperDuperDB/superduperdb/blob/main/docs/hr/content/docs/setup/testing.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Sandbox",permalink:"/docs/docs/setup/sandbox"},next:{title:"System Observability",permalink:"/docs/docs/setup/observability"}},d={},a=[];function l(e){const n={code:"code",h1:"h1",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"testing",children:"Testing"}),"\n",(0,s.jsx)(n.p,{children:"Make sure you have the following prerequistes"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"Python 3.11"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"Docker"})}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["To run the ",(0,s.jsx)(n.code,{children:"superduperdb"})," tests, for a particular version of the code, checkout to that version with this command:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"git clone https://github.com/SuperDuperDB/superduperdb.git\ngit checkout <MAJOR>.<MINOR>.<PATCH>      # e.g. 0.1.0\n"})}),"\n",(0,s.jsx)(n.p,{children:"Install the requirements for that version:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"pip install -e '.[dev]'\n"})}),"\n",(0,s.jsx)(n.p,{children:"To run the unittests run:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"pytest test/unittest\n"})}),"\n",(0,s.jsx)(n.p,{children:"To run the integration tests, it's necessary to build and initializing the testing environment:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"make testenv_image\nmake testenv_init\n"})}),"\n",(0,s.jsxs)(n.p,{children:["When you run ",(0,s.jsx)(n.code,{children:"make testenv_init"}),",  you may be prompted to  add the following host names to your ",(0,s.jsx)(n.code,{children:"/etc/hosts/"})," file"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"127.0.0.1 mongodb\n127.0.0.1 vector-search\n127.0.0.1 cdc\n127.0.0.1 scheduler\n"})}),"\n",(0,s.jsxs)(n.p,{children:["After copy-pasting the above host names into the ",(0,s.jsx)(n.code,{children:"/etc/host/"})," file , run ",(0,s.jsx)(n.code,{children:"make testenv_init"})," again to be successful."]}),"\n",(0,s.jsx)(n.p,{children:"Next, Run the integration tests with:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"pytest test/integration\n"})}),"\n",(0,s.jsx)(n.p,{children:"To run the additional quality checks which we run on the CI/ CD on GitHub, run:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"make lint-and-type-check\n"})})]})}function h(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},11151:(e,n,t)=>{t.d(n,{Z:()=>c,a:()=>o});var s=t(67294);const i={},r=s.createContext(i);function o(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);